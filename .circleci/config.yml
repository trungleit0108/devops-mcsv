# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

jobs:
  build:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

      - run:
          name: Install AWS CLI
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install

      - run:
          name: deploy EKS cluster
          command: |
            aws cloudformation create-stack --stack-name my-eks-cluster \
              --template-body .circleci/files/kubernetes-cluster.yaml \
              --capabilities CAPABILITY_IAM \
              --parameters \
                ParameterKey=ClusterName,ParameterValue=my-eks-cluster \
                ParameterKey=AvailabilityZone,ParameterValue=us-east-1a \
                ParameterKey=KeyPairName,ParameterValue=cluster_key_pair

      - run:
          name: check running pods
          command: |
            kubectl get pods

      - run:
          name: get service name in cluster
          command: |
            kubectl get services

      # - run:
      #     name: get service external IP
      #     command: |
      #       EXTERNAL_IP=$(kubectl get service <service-name> -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
      #       echo "Service External IP: $EXTERNAL_IP"
